// Copyright 2017 Istio Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// THIS FILE IS AUTOMATICALLY GENERATED.

syntax = "proto3";

package checknothing;

import "mixer/adapter/model/v1beta1/extensions.proto";
import "google/protobuf/any.proto";
import "google/rpc/status.proto";
import "mixer/adapter/model/v1beta1/type.proto";



option (istio.mixer.adapter.model.v1beta1.template_variety) = TEMPLATE_VARIETY_CHECK;



// The `checknothing` template represents an empty block of data, which can useful
// in different testing scenarios.
// CheckNothing represents an empty block of data that is used for Check-capable
// adapters which don't require any parameters. This is primarily intended for testing
// scenarios.
// 
// Example config:
// ```yaml
// apiVersion: "config.istio.io/v1alpha2"
// kind: checknothing
// metadata:
//   name: denyrequest
//   namespace: istio-system
// spec:
// ```
message Type {
  
}



/* Infrastructure backend service for template 'checknothing'*/
service CheckNothingService {
    // HandleCheckNothing is called by Mixer at request-time to deliver 'checknothing' instances to
    // to the backend.
    rpc HandleCheckNothing(HandleCheckNothingRequest) returns (HandleCheckNothingResponse);
}

// Request message for HandleCheckNothing method.
message HandleCheckNothingRequest {

    // CheckNothing instances.
    repeated Type instances = 1;

    // Adapter specific configuration.
    // Note: Backends can also implement [InfrastructureBackend][https://istio.io/docs/reference/config/mixer/istio.mixer.adapter.model.v1beta1.html#InfrastructureBackend] service and therefore
    // opt to receive handler configuration only through [InfrastructureBackend.CreateSession][TODO: Link to this fragment]
    // call. In that case, adapter_config would contain the session_id string value with google.protobuf.Any.type_url
    // as "google.protobuf.StringValue".
    google.protobuf.Any adapter_config = 2;

    // Id to dedupe identical requests.
    string dedup_id = 3;
}

// Response message for HandleCheckNothing method.
message HandleCheckNothingResponse {
    // The success/failure status of HandleCheckNothing call.
    google.rpc.Status status = 1;
}

// InstanceMsg is constructed by Mixer for the 'checknothing' template.
//
// CheckNothing represents an empty block of data that is used for Check-capable
// adapters which don't require any parameters. This is primarily intended for testing
// scenarios.
// 
// Example config:
// ```yaml
// apiVersion: "config.istio.io/v1alpha2"
// kind: checknothing
// metadata:
//   name: denyrequest
//   namespace: istio-system
// spec:
// ```
message InstanceMsg {
  // Name of the instance as specified in configuration.
  string name = 72295727;
  
}





message InstanceParam {
  
  
}



